{% comment %}
Nutrition Accordion
- Uses variant metafield: custom.nutrition (metaobject reference of type nutrition_facts)
- On product pages: uses the current product and listens to variant changes
- On non-product pages: choose a product in the section settings and optionally show a variant dropdown
{% endcomment %}

{% liquid
  assign host_product = product
  if host_product == nil
    if section.settings.product != blank
      assign host_product = section.settings.product
    endif
  endif
%}

{% if host_product %}
  <section class="nutrition-accordion" id="section-{{ section.id }}" data-section-id="{{ section.id }}" data-has-embedded-selector="{{ section.settings.show_variant_selector }}">
    <div class="nutrition-accordion__header" role="button" aria-expanded="false" tabindex="0">
      <h3>{{ 'Nutritional Information' | t }}</h3>
      <span class="nutrition-accordion__chevron" aria-hidden="true"></span>
    </div>

    <div class="nutrition-accordion__content" hidden>
      {% if section.settings.show_variant_selector %}
        <label class="nutrition-accordion__label" for="nutrition-variant-{{ section.id }}">{{ 'Select flavor' | t }}</label>
        <select id="nutrition-variant-{{ section.id }}" class="nutrition-variant-select">
          {% for v in host_product.variants %}
            <option value="{{ v.id }}">{{ v.title }}</option>
          {% endfor %}
        </select>
      {% endif %}

      {%- comment -%}
      Pre-render nutrition blocks for all variants and swap them on selection.
      {%- endcomment -%}
      <div class="nutrition-accordion__variants">
        {% for v in host_product.variants %}
          {% assign nf = v.metafields.custom.nutrition.value %}
          <div class="nutrition-variant" data-variant-id="{{ v.id }}" {% if forloop.first == false %}hidden{% endif %}>
            {% if nf %}
              {% assign portion_size = nf.portion_size %}
              {% assign factor = portion_size | times: 1.0 | divided_by: 100.0 %}

              {% if nf.ingredients %}
                <div class="nutrition-ingredients">
                  <strong>{{ 'Ingredients:' | t }}</strong>
                  <span>{{ nf.ingredients }}</span>
                </div>
              {% endif %}

              <div class="nutrition-tables">
                <div class="nutrition-table">
                  <div class="nutrition-table__title">{{ 'Per 100 g' | t }}</div>
                  <table>
                    <tbody>
                      {% if nf.energy_kj_100g or nf.energy_kcal_100g %}
                        <tr><th>{{ 'Energy' | t }}</th><td>{{ nf.energy_kj_100g }} KJ / {{ nf.energy_kcal_100g }} kcal</td></tr>
                      {% endif %}
                      {% if nf.fat_g_100g %}<tr><th>{{ 'Fat' | t }}</th><td>{{ nf.fat_g_100g }} g</td></tr>{% endif %}
                      {% if nf.sat_fat_g_100g %}<tr><th>{{ '- of which saturates' | t }}</th><td>{{ nf.sat_fat_g_100g }} g</td></tr>{% endif %}
                      {% if nf.carbs_g_100g %}<tr><th>{{ 'Carbohydrates' | t }}</th><td>{{ nf.carbs_g_100g }} g</td></tr>{% endif %}
                      {% if nf.sugars_g_100g %}<tr><th>{{ '- of which sugars' | t }}</th><td>{{ nf.sugars_g_100g }} g</td></tr>{% endif %}
                      {% if nf.fiber_g_100g %}<tr><th>{{ 'Fiber' | t }}</th><td>{{ nf.fiber_g_100g }} g</td></tr>{% endif %}
                      {% if nf.protein_g_100g %}<tr><th>{{ 'Protein' | t }}</th><td>{{ nf.protein_g_100g }} g</td></tr>{% endif %}
                      {% if nf.salt_g_100g %}<tr><th>{{ 'Salt' | t }}</th><td>{{ nf.salt_g_100g }} g</td></tr>{% endif %}
                      {% if nf.magnesium_mg_100g or nf.zinc_mg_100g or nf.iron_mg_100g %}
                        <tr><th>{{ 'Minerals' | t }}</th><td></td></tr>
                        {% if nf.magnesium_mg_100g %}<tr><th>{{ 'Magnesium' | t }}</th><td>{{ nf.magnesium_mg_100g }} mg</td></tr>{% endif %}
                        {% if nf.zinc_mg_100g %}<tr><th>{{ 'Zinc' | t }}</th><td>{{ nf.zinc_mg_100g }} mg</td></tr>{% endif %}
                        {% if nf.iron_mg_100g %}<tr><th>{{ 'Iron' | t }}</th><td>{{ nf.iron_mg_100g }} mg</td></tr>{% endif %}
                      {% endif %}
                    </tbody>
                  </table>
                </div>

                {% if portion_size %}
                  <div class="nutrition-table">
                    <div class="nutrition-table__title">
                      {% if nf.portion_label != blank %}
                        {{ 'Per portion' | t }} — {{ nf.portion_label }}
                      {% else %}
                        {{ 'Per portion' | t }} — {{ portion_size }} {{ nf.portion_unit }}
                      {% endif %}
                    </div>
                    <table>
                      <tbody>
                        {% if nf.energy_kj_100g or nf.energy_kcal_100g %}
                          <tr>
                            <th>{{ 'Energy' | t }}</th>
                            <td>
                              {% assign energy_kj_portion = nf.energy_kj_100g | times: portion_size | divided_by: 100 | round: 0 %}
                              {% assign energy_kcal_portion = nf.energy_kcal_100g | times: portion_size | divided_by: 100 | round: 0 %}
                              {{ energy_kj_portion }} KJ / {{ energy_kcal_portion }} kcal
                            </td>
                          </tr>
                        {% endif %}
                        {% if nf.fat_g_100g %}<tr><th>{{ 'Fat' | t }}</th><td>{{ nf.fat_g_100g | times: portion_size | divided_by: 100.0 | round: 1 }} g</td></tr>{% endif %}
                        {% if nf.sat_fat_g_100g %}<tr><th>{{ '- of which saturates' | t }}</th><td>{{ nf.sat_fat_g_100g | times: portion_size | divided_by: 100.0 | round: 1 }} g</td></tr>{% endif %}
                        {% if nf.carbs_g_100g %}<tr><th>{{ 'Carbohydrates' | t }}</th><td>{{ nf.carbs_g_100g | times: portion_size | divided_by: 100.0 | round: 1 }} g</td></tr>{% endif %}
                        {% if nf.sugars_g_100g %}<tr><th>{{ '- of which sugars' | t }}</th><td>{{ nf.sugars_g_100g | times: portion_size | divided_by: 100.0 | round: 1 }} g</td></tr>{% endif %}
                        {% if nf.fiber_g_100g %}<tr><th>{{ 'Fiber' | t }}</th><td>{{ nf.fiber_g_100g | times: portion_size | divided_by: 100.0 | round: 1 }} g</td></tr>{% endif %}
                        {% if nf.protein_g_100g %}<tr><th>{{ 'Protein' | t }}</th><td>{{ nf.protein_g_100g | times: portion_size | divided_by: 100.0 | round: 1 }} g</td></tr>{% endif %}
                        {% if nf.salt_g_100g %}<tr><th>{{ 'Salt' | t }}</th><td>{{ nf.salt_g_100g | times: portion_size | divided_by: 100.0 | round: 2 }} g</td></tr>{% endif %}
                      </tbody>
                    </table>
                  </div>
                {% endif %}
              </div>
            {% else %}
              <div class="nutrition-empty">{{ 'No nutritional information available for this variant.' | t }}</div>
            {% endif %}
          </div>
        {% endfor %}
      </div>
    </div>

    <style>
      #section-{{ section.id }} .nutrition-accordion__header {
        padding: 12px 16px; border: 1px solid rgba(0,0,0,.1); border-radius: 12px; display: flex; align-items: center; justify-content: space-between; cursor: pointer; background: #fff;
      }
      #section-{{ section.id }} .nutrition-accordion__chevron {
        width: 10px; height: 10px; border-right: 2px solid #444; border-bottom: 2px solid #444; transform: rotate(45deg); transition: transform .25s;
      }
      #section-{{ section.id }} .nutrition-accordion__header[aria-expanded="true"] .nutrition-accordion__chevron {
        transform: rotate(-135deg);
      }
      #section-{{ section.id }} .nutrition-accordion__content { padding: 16px 0; }
      #section-{{ section.id }} .nutrition-ingredients { margin-bottom: 16px; }
      #section-{{ section.id }} .nutrition-tables { display: grid; gap: 12px; }
      #section-{{ section.id }} .nutrition-table { border: 1px solid rgba(0,0,0,.1); border-radius: 12px; overflow: hidden; background: #fff; }
      #section-{{ section.id }} .nutrition-table__title { padding: 10px 12px; font-weight: 600; border-bottom: 1px solid rgba(0,0,0,.08); }
      #section-{{ section.id }} table { width: 100%; border-collapse: collapse; }
      #section-{{ section.id }} th, #section-{{ section.id }} td { padding: 10px 12px; text-align: left; border-bottom: 1px solid rgba(0,0,0,.06); }
      #section-{{ section.id }} tr:last-child th, #section-{{ section.id }} tr:last-child td { border-bottom: 0; }
      #section-{{ section.id }} .nutrition-variant-select { width: 100%; margin-bottom: 12px; }
    </style>

    <script>
      (function() {
        var root = document.getElementById('section-{{ section.id }}');
        if (!root) return;

        var header = root.querySelector('.nutrition-accordion__header');
        var content = root.querySelector('.nutrition-accordion__content');
        if (header && content) {
          var toggle = function() {
            var expanded = header.getAttribute('aria-expanded') === 'true';
            header.setAttribute('aria-expanded', String(!expanded));
            if (expanded) { content.setAttribute('hidden', 'hidden'); }
            else { content.removeAttribute('hidden'); }
          };
          header.addEventListener('click', toggle);
          header.addEventListener('keydown', function(e){ if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); toggle(); } });
        }

        function showVariant(variantId) {
          var blocks = root.querySelectorAll('.nutrition-variant');
          blocks.forEach(function(el){ el.hidden = (el.getAttribute('data-variant-id') !== String(variantId)); });
        }

        // Embedded variant selector (for non-product pages)
        var embeddedSelect = root.querySelector('.nutrition-variant-select');
        if (embeddedSelect) {
          embeddedSelect.addEventListener('change', function() {
            showVariant(this.value);
          });
          // Default to first option
          if (embeddedSelect.value) showVariant(embeddedSelect.value);
        }

        // Try to sync with product page variant changes (Dawn and similar)
        // 1) Listen for Shopify theme events
        document.addEventListener('variant:change', function(e) {
          if (!e || !e.detail || !e.detail.variant) return;
          showVariant(e.detail.variant.id);
        });
        document.addEventListener('product:variant-change', function(e) {
          if (!e || !e.detail || !e.detail.variant) return;
          showVariant(e.detail.variant.id);
        });

        // 2) Fallback: watch the product form selected variant id (input[name="id"])
        var idInput = document.querySelector('form[action*="/cart/add"] input[name="id"]');
        if (idInput) {
          var last = idInput.value;
          if (last) showVariant(last);
          var obs = new MutationObserver(function(){ if (idInput.value !== last) { last = idInput.value; showVariant(last); } });
          obs.observe(idInput, { attributes: true, attributeFilter: ['value'] });
          idInput.addEventListener('change', function(){ showVariant(this.value); });
        }
      })();
    </script>
  </section>
{% else %}
  <section id="section-{{ section.id }}" class="nutrition-accordion">
    <div class="nutrition-accordion__header" role="button" aria-expanded="false" tabindex="0">
      <h3>{{ 'Nutritional Information' | t }}</h3>
      <span class="nutrition-accordion__chevron" aria-hidden="true"></span>
    </div>
    <div class="nutrition-accordion__content" hidden>
      <div class="nutrition-empty">{{ 'Select a product in the section settings.' | t }}</div>
    </div>
  </section>
{% endif %}

{% schema %}
{
  "name": "Nutrition accordion",
  "settings": [
    { "type": "product", "id": "product", "label": "Product (for non-product pages)" },
    { "type": "checkbox", "id": "show_variant_selector", "label": "Show variant selector (when using a picked product)", "default": true }
  ],
  "presets": [
    { "name": "Nutrition accordion" }
  ]
}
{% endschema %}